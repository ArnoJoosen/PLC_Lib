<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="RFID_Update" Id="{20f150fc-a480-4e16-b234-bfef927e8cea}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK RFID_Update
VAR_IN_OUT
	Sensor : RFID_Sensor;
END_VAR

VAR_OUTPUT
	Q : BOOL;
	Tag_Data : RFID_Tag_Data;
	Error : RFID_Error;
END_VAR

VAR
	TagFB: FB_Compact;
	Execute : BOOL;
	Abort : BOOL;
	TimeOut : UDINT := 1000000; 
	Command : COMMAND;
	Done : BOOL;
	Busy : BOOL;
	_Error : BOOL;
	Aborted : BOOL;
	ErrorID : ERROR;
	TagDetekt : BOOL;
	NotConekted : BOOL;
	LData : UINT;
	Adress : UDINT := 0;
	Length : UINT := 0;
	i : UINT;
	RxBuffer : ARRAY[0..127] OF BYTE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE Sensor.State OF
	RFID_SensorState.idel:
		Command := 16#0;
		Execute := FALSE;
		Execute_TagFB();
	RFID_SensorState.ReadTag:
		Read_StateMachine();
		Execute_TagFB();
	RFID_SensorSTATE.WreadTag:
		Wread_StateMachine();
		Execute_TagFB();
END_CASE

IF NOT (Sensor.State = RFID_SensorState.Error) THEN
	Q := TagDetekt;
	IF TagDetekt THEN
		FOR i := 0 TO 7 BY 1 DO
			Sensor.CurrentTagData.UID[i] := Sensor.Input_Buffer[i];
		END_FOR
	END_IF
END_IF

IF _Error THEN
	Sensor.State := RFID_SensorState.Error;
	CASE ErrorID OF
		1:
			Error := RFID_Error.Time_Out;
		ELSE
			Error := RFID_Error.Sesnor;
	END_CASE
ELSIF NotConekted THEN
	Sensor.State := RFID_SensorState.Error;
	Error := RFID_Error.Not_Connected;
ELSE
	Error := RFID_Error.None;
	Tag_Data := Sensor.CurrentTagData;
END_IF]]></ST>
    </Implementation>
    <Action Name="Execute_TagFB" Id="{1b6b10d5-7037-4368-abd1-1e52e24decdd}">
      <Implementation>
        <ST><![CDATA[TagFB(
	xExecute:= Execute, // BOOL
	xAbort:= Abort, // BOOL
	udiTimeOut:= TimeOut, // UDINT
	xDone=> Done, // BOOL
	xBusy=> Busy, // BOOL
	xError=> _Error, // BOOL
	xAborted=> Aborted, // BOOL
	eCommand:= Command, /// COMMAND
		// This command wil be executed on xEcecute
	rStatusMapping:= Sensor.Input, // REFFERENCE TO CompactInput_t
		// input data of the compact module
	rControlMapping:= Sensor.Ouput, // REFEREANCE TO CompactOuput_t
		// output data of the compact module
	udiStartAddress:= Adress, // UDINT
		// the address defines the adress in the context of the command 
		// defined by the command code I.E. the adress of the data within the tag memory
	uiDataLength:= Length, // UINT
		// de length of data to be read or written or the size of the inventory response
	eErrorID=> ErrorID, // ERROR
	xTP=> TagDetekt, // BOOL
		// tag whithin the detection range
	xRWHeadNotConnected=> NotConekted, // BOOL
		// read/write had not connected
	uiDataRxLength=> LData,  // UINT
		// the length defines the legth in the context of the command 
		// defined by the command code I.E. the length of data to be read or written or the 
		// size of the inventory response
	pReadDataMapping:= Sensor.Input_Buffer, // POINTER TO BYTE
		// start adress of the input data i.e. input data of the read data module e.g.g ADR()
	pWriteDataMapping:= Sensor.Output_Buffer, // PONTER TO BYTE
		// start address of the ouput data i.e. ouput data of the write data module
	pDataTx:= Sensor.TxBuffer, // POINTER TO BYTE
		// buffer which contains the data to be written
	pDataRx:= RxBuffer // PINTER TO BYTE
		// buffer which stores the read data
);
]]></ST>
      </Implementation>
    </Action>
    <Action Name="Read_StateMachine" Id="{36835fe0-353a-4e29-a19a-519735e04665}">
      <Implementation>
        <ST><![CDATA[IF Sensor.ReadState = Read_State.Triggerd THEN
	Command := 16#2;
	Adress := Sensor.Pagina * 128;
	Length := 128;
	Sensor.ReadState := Read_State.DataWritten;
ELSIF Sensor.ReadState = Read_State.DataWritten THEN
	Execute := TRUE;
	IF Done AND NOT _Error THEN
		Sensor.ReadState := Read_State.Done;
	END_IF
ELSIF Sensor.ReadState = Read_State.Done THEN
	Execute := FALSE;
	Sensor.State := RFID_SensorState.idel;
	MEMCPY(destAddr:= ADR(Sensor.CurrentTagData.Data), srcAddr:= ADR(RxBuffer), n:= 128);
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="Wread_StateMachine" Id="{ebfbba6a-f1d8-44b7-9f89-a9c09450b936}">
      <Implementation>
        <ST><![CDATA[IF Sensor.WreadState = Wread_State.Triggerd THEN
	Command := 16#4;
	Adress := Sensor.Pagina * 128;
	Length := 128;
	Sensor.WreadState := Wread_State.DataWritten;
ELSIF Sensor.WreadState = Wread_State.DataWritten THEN
	Execute := TRUE;
	IF Done AND NOT _Error THEN
		Sensor.WreadState := Wread_State.Done;
	END_IF
ELSIF Sensor.WreadState = Wread_State.Done THEN
	Execute := FALSE;
	Sensor.State := RFID_SensorState.idel;
END_IF]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="RFID_Update">
      <LineId Id="9" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="119" Count="0" />
      <LineId Id="139" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="146" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="148" Count="1" />
      <LineId Id="152" Count="1" />
      <LineId Id="150" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="163" Count="1" />
      <LineId Id="167" Count="2" />
      <LineId Id="165" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="134" Count="0" />
      <LineId Id="133" Count="0" />
      <LineId Id="135" Count="1" />
      <LineId Id="201" Count="0" />
      <LineId Id="125" Count="0" />
    </LineIds>
    <LineIds Name="RFID_Update.Execute_TagFB">
      <LineId Id="2" Count="36" />
      <LineId Id="1" Count="0" />
    </LineIds>
    <LineIds Name="RFID_Update.Read_StateMachine">
      <LineId Id="3" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="9" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="23" Count="3" />
      <LineId Id="28" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="RFID_Update.Wread_StateMachine">
      <LineId Id="2" Count="7" />
      <LineId Id="11" Count="4" />
      <LineId Id="1" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>